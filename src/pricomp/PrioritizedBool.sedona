//
// Copyright (c) 2012 Tridium, Inc
// Licensed under the Academic Free License version 3.0
//
// History:
//   26 Oct 11  Elizabeth McKenney  Creation
//

**
** PrioritizedBool 
**
class PrioritizedBool
  extends Prioritized
{

  define bool NULLVAL = null

////////////////////////////////////////////////////////////////
// Properties
////////////////////////////////////////////////////////////////

  @readonly 
  @summary=false property bool in1 = NULLVAL

  @summary=false property bool in2 = NULLVAL
  @summary=false property bool in3 = NULLVAL
  @summary=false property bool in4 = NULLVAL
  @summary=false property bool in5 = NULLVAL

  @readonly 
  @summary=false property bool in6 = NULLVAL

  @summary=false property bool in7 = NULLVAL

  @readonly 
  @summary=false property bool in8 = NULLVAL

  @summary=false property bool in9 = NULLVAL
  @summary=true  property bool in10 = NULLVAL
  @summary=false property bool in11 = NULLVAL
  @summary=false property bool in12 = NULLVAL
  @summary=false property bool in13 = NULLVAL
  @summary=false property bool in14 = NULLVAL
  @summary=false property bool in15 = NULLVAL
  @summary=true  property bool in16 = NULLVAL

  @config 
  @summary=false property bool fallback = NULLVAL

  @readonly 
  @summary=true  property bool out


  @config 
  @unit=Units.millisecond
  @summary=false property int minActiveTime = 0

  @config 
  @unit=Units.millisecond
  @summary=false property int minInactiveTime = 0



////////////////////////////////////////////////////////////////
// Actions
////////////////////////////////////////////////////////////////

  action void emergencySetActive()
  {
    in1 = true
  }

  action void emergencySetInactive()
  {
    in1 = false
  }

  action void emergencyAuto()
  {
    setToDefault(PrioritizedBool.in1)
  }

  action void manualSetActive(int expTime)
  {
    in8 = true
    overrideExpTime = (long)expTime * 1ms
    if (overrideExpTime>0L) overrideExpTime += Sys.ticks()
  }

  action void manualSetInactive(int expTime)
  {
    in8 = false
    overrideExpTime = (long)expTime * 1ms
    if (overrideExpTime>0L) overrideExpTime += Sys.ticks()
  }

  action void manualAuto()
  {
    setToDefault(PrioritizedBool.in8)
    overrideExpTime = 0L
  }



////////////////////////////////////////////////////////////////
// Component
////////////////////////////////////////////////////////////////

  **
  ** Execute is called once every scan using the
  ** simple round-robin scan engine.
  **
  override virtual void execute()
  {
    bool value = fallback
    int  level = FB_LEVEL

    // Expire manual override if any 
    if ( (overrideExpTime>0L) && (Sys.ticks()>overrideExpTime) )
      manualAuto()

    // Expire active timeout if any 
    if ( (minActiveEndTime>0L) && (Sys.ticks()>minActiveEndTime) )
      minActiveEndTime = 0L

    // Expire inactive timeout if any 
    if ( (minInactiveEndTime>0L) && (Sys.ticks()>minInactiveEndTime) )
      minInactiveEndTime = 0L

    // If both min active & inactive times have expired, stop using in6
    if ( (minActiveEndTime==0L) && (minInactiveEndTime==0L) )
    {
      setToDefault(PrioritizedBool.in6)
    }

    
    // Step through slot list, looking for highest active input (lowest level#)
    foreach (Slot s : this.type.slots, this.type.slotsLen)
    {
      int lev = getSlotLevel(s)
      if (lev==MAXLEVEL) continue          // MAXLEVEL here indicates slot not relevant

      bool bval = getBool(s)
      if (bval==NULLVAL) continue 

      if (level>=lev)
      {
        value = bval
        level = lev
      }
    }
    
    // Start min active/inactive timer if appropriate
    if ((value!=prevOut) && (value!=NULLVAL))
    {
      if (value && (minActiveTime>0))
      {
        in6 = true
        minActiveEndTime = Sys.ticks() + ((long)minActiveTime * 1ms)
      }
      else if (!value && (minInactiveTime>0))
      {
        in6 = false
        minInactiveEndTime = Sys.ticks() + ((long)minInactiveTime * 1ms)
      }
      prevOut = value
    }

    // Update output value
    out         = value
    sourceLevel = level
  }

  

////////////////////////////////////////////////////////////////
// Fields
////////////////////////////////////////////////////////////////

  bool prevOut = false

  long minActiveEndTime   = 0L
  long minInactiveEndTime = 0L

}
